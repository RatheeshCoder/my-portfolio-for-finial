{"ast":null,"code":"var _jsxFileName = \"D:\\\\Freelancer\\\\my-portfolio\\\\src\\\\pages\\\\chatbot\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\n// File path: src/components/Chatbot/Chatbot.jsx\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { gsap } from 'gsap';\nimport './Chatbot.css';\nimport LogoOpen from '../../assets/chatclose.gif'; // Ensure to use the correct asset for open state\nimport LogoClose from '../../assets/chatclose.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const iframeRef = useRef(null);\n  const containerRef = useRef(null);\n  const buttonRef = useRef(null); // Reference for the floating button\n\n  const handleButtonClick = () => {\n    setIsExpanded(prevState => !prevState);\n    if (!isExpanded) {\n      gsap.to(containerRef.current, {\n        height: '80vh',\n        duration: 0.5\n      });\n      gsap.to(buttonRef.current, {\n        rotation: 180,\n        duration: 0.5\n      }); // Rotate the button\n    } else {\n      gsap.to(containerRef.current, {\n        height: '0',\n        duration: 0.5\n      });\n      gsap.to(buttonRef.current, {\n        rotation: 0,\n        duration: 0.5\n      }); // Reset the rotation\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: `Container ${isExpanded ? 'expanded' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Chatbot\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          ref: iframeRef,\n          src: \"https://www.chatbase.co/chatbot-iframe/UZPK1q-XRfxoEDa5vY6xP\",\n          width: \"100%\",\n          style: {\n            height: '100%'\n          },\n          frameBorder: \"0\",\n          title: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hide_watermark\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"transforming ideas digital realities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"floating-button\",\n      onClick: handleButtonClick,\n      ref: buttonRef,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isExpanded ? LogoClose : LogoOpen,\n        alt: \"Chatbot Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chatbot, \"Jz2g7X2yGrwdBCY/To3/sQ/R7oM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","gsap","LogoOpen","LogoClose","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","isExpanded","setIsExpanded","iframeRef","containerRef","buttonRef","handleButtonClick","prevState","to","current","height","duration","rotation","children","ref","className","src","width","style","frameBorder","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","alt","_c","$RefreshReg$"],"sources":["D:/Freelancer/my-portfolio/src/pages/chatbot/Chatbot.jsx"],"sourcesContent":["// File path: src/components/Chatbot/Chatbot.jsx\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport './Chatbot.css';\r\nimport LogoOpen from '../../assets/chatclose.gif';  // Ensure to use the correct asset for open state\r\nimport LogoClose from '../../assets/chatclose.gif';\r\n\r\nconst Chatbot = () => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const iframeRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const buttonRef = useRef(null);  // Reference for the floating button\r\n\r\n  const handleButtonClick = () => {\r\n    setIsExpanded(prevState => !prevState);\r\n    if (!isExpanded) {\r\n      gsap.to(containerRef.current, { height: '80vh', duration: 0.5 });\r\n      gsap.to(buttonRef.current, { rotation: 180, duration: 0.5 });  // Rotate the button\r\n    } else {\r\n      gsap.to(containerRef.current, { height: '0', duration: 0.5 });\r\n      gsap.to(buttonRef.current, { rotation: 0, duration: 0.5 });  // Reset the rotation\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div ref={containerRef} className={`Container ${isExpanded ? 'expanded' : ''}`}>\r\n        <div className=\"Chatbot\">\r\n          <iframe\r\n            ref={iframeRef}\r\n            src=\"https://www.chatbase.co/chatbot-iframe/UZPK1q-XRfxoEDa5vY6xP\"\r\n            width=\"100%\"\r\n            style={{ height: '100%' }}\r\n            frameBorder=\"0\"\r\n            title=\"Chatbot\"\r\n          ></iframe>\r\n          <div className='hide_watermark'>\r\n            <p>transforming ideas digital realities</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"floating-button\" onClick={handleButtonClick} ref={buttonRef}>\r\n        <img src={isExpanded ? LogoClose : LogoOpen} alt=\"Chatbot Logo\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}